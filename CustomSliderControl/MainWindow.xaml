<Window x:Class="CustomSliderControl.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CustomSliderControl"
        xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
        mc:Ignorable="d"
        Title="WPF Test window" Height="450" Width="400">

  <Window.Resources>
    <local:Seatbuckviewmodel x:Key="DesignViewmodel"/>
  </Window.Resources>

   

  <Grid d:DataContext="{StaticResource DesignViewmodel}">
    <Grid.RowDefinitions>
      <RowDefinition Height="30"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>



    
    

    <StackPanel Orientation="Horizontal">
      <Button Name="testbutton" Click="Testbutton_Click">Random Target Pos</Button>
      <Button Name="button2" Click="Button2_Click">list changed test</Button>
      <Button Name="DeleteButton" Click="DeleteButton_Click"> Delete </Button>
    </StackPanel>

    <TabControl Grid.Row="1">
      <TabItem Header="Slider">
        <ListView ItemsSource="{Binding Actuators}" Background="LightGray" HorizontalAlignment="Stretch">
          <ListView.ItemTemplate>
            <DataTemplate>
              <local:ActuatorControl></local:ActuatorControl>
            </DataTemplate>
          </ListView.ItemTemplate>
        </ListView>
      </TabItem>
      <TabItem >
        <TabItem.Header>
          <StackPanel Orientation="Horizontal">
            <!--<Ellipse Width="10" Height="10" Fill="Red" />-->
            <fa:ImageAwesome Icon="CircleOutlineNotch" VerticalAlignment="Center" SpinDuration="4" Spin="True" Height="10"/>
            <TextBlock Margin="4" > mulitselect </TextBlock>
          </StackPanel>
        </TabItem.Header>

        <ListBox ItemsSource="{Binding Actuators}" SelectionMode="Multiple" x:Name="MultiSelectBox" SelectionChanged="MultiSelectBox_SelectionChanged">

          
            <ListBox.Resources>
              <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                      <Border x:Name="Bd" 
                            BorderThickness="2"
                             BorderBrush="Transparent"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                      </Border>
                      <ControlTemplate.Triggers>
                        <MultiTrigger>
                          <MultiTrigger.Conditions>
                            <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                            <Condition Property="IsSelected"
                                            Value="True" />
                          </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="DarkOrange" />
                        </MultiTrigger>
                        <MultiTrigger>
                          <MultiTrigger.Conditions>
                            <Condition Property="Selector.IsSelectionActive"
                                            Value="True" />
                            <Condition Property="IsSelected"
                                            Value="True" />
                          </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="OrangeRed" />
                        </MultiTrigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
                
                
                
              
              <Setter Property="RenderTransform">
                <Setter.Value>
                  <TranslateTransform/>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                  <EventTrigger.Actions>
                    <BeginStoryboard>
                      <Storyboard>
                        
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" />
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.X" From="10" To="0" Duration="0:0:0.3"/>
                      </Storyboard>
                    </BeginStoryboard>

                  </EventTrigger.Actions>

                </EventTrigger>
              </Style.Triggers>
            </Style>
              
          </ListBox.Resources>

            <ListBox.ItemTemplate>
            <DataTemplate>
              <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                  <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Margin" Value="2" />
                  </Style>
                  
                </StackPanel.Resources>
                <TextBlock Text="Position" Foreground="Gray" FontSize="7"/>
                <TextBlock Text="{Binding Position}"/>
                <TextBlock Text="Target" Foreground="Gray" FontSize="7"/>
                <TextBlock Text="{Binding TargetPositon}"/>
                
              </StackPanel>

             
              
            </DataTemplate>
          
          </ListBox.ItemTemplate>

        </ListBox>

      </TabItem>


      <TabItem Header="wrappannel">

        <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Actuators}">
          <ListView.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel >
         
                
              </WrapPanel>
            </ItemsPanelTemplate>
          </ListView.ItemsPanel>

          <ListView.ItemTemplate>
            <DataTemplate>
              <Border Margin="3" BorderBrush="Blue" CornerRadius="4" BorderThickness="1">
                <StackPanel Height="60" Width="60" Margin="4">
                  <fa:ImageAwesome Icon="Gear" Height="10" HorizontalAlignment="Left"></fa:ImageAwesome>
                <TextBlock Text="Position" Foreground="Gray" FontSize="7"/>
                <TextBlock Text="{Binding Position}"/>
                  <TextBlock Text="Target" Foreground="Gray" FontSize="7"/>
                  <TextBlock Text="{Binding TargetPositon}"/>
                </StackPanel>
              </Border>

              
              
            </DataTemplate>
            
          </ListView.ItemTemplate>


          <ListView.Resources>


            
              <Style TargetType="{x:Type ListViewItem}">
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" 
                            BorderThickness="2"
                             BorderBrush="Transparent"
                            SnapsToDevicePixels="true" Margin="3">
                      <Grid>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />


                        <Canvas x:Name="notch" Visibility="Hidden">
                          <Path Grid.Row="1"  HorizontalAlignment="Center" Fill="Green" Opacity="1"
                  Data="M 0,0 30,0 0, 30 "/>


                          <fa:ImageAwesome Foreground="White" Margin="4" Icon="Check" Height="10" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </Canvas>
                        

                       </Grid>
                     
                    </Border>
                    <ControlTemplate.Triggers>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                          <Condition Property="IsSelected"
                                            Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="Green" />
                        <Setter TargetName="notch" Property="Visibility" Value="Visible"/>
                      </MultiTrigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="Selector.IsSelectionActive"
                                            Value="True" />
                          <Condition Property="IsSelected"
                                            Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="Green" />
                        <Setter TargetName="notch" Property="Visibility" Value="Visible"/>
                      </MultiTrigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>

              <Setter Property="RenderTransform">
                <Setter.Value>
                  <TranslateTransform/>
                </Setter.Value>
              </Setter>
                  
              <Setter Property="LayoutTransform">
                <Setter.Value>
                  <ScaleTransform x:Name="ltrafo" />
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                  <EventTrigger.Actions>
                    <BeginStoryboard>
                      <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" Duration="0:0:.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" />
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.X" From="10" To="0" Duration="0:0:0.3"/>
                      </Storyboard>
                    </BeginStoryboard>

                  </EventTrigger.Actions>

                </EventTrigger>
              </Style.Triggers>

            </Style>
          </ListView.Resources>


        </ListView>
        
        


      </TabItem>
      
    </TabControl>
    

    <!--<Rectangle  Name="myrect"
      Canvas.Top="100"
      Canvas.Left="10"
      Height="100"
      Width="100"
      Stroke="Black"
      StrokeThickness="5">
      <Rectangle.RenderTransform>
        <TranslateTransform x:Name="AnimatedTranslateTransform" />
      </Rectangle.RenderTransform>-->

      <!--<Rectangle.Resources>
        
      
            <Storyboard x:Key="mystory" x:Name="mystoryboard">

              --><!-- Animate the TranslateTransform.X property using 3 KeyFrames
                   which animates the rectangle along a straight line. 
                   This animation repeats indefinitely. --><!--
              <DoubleAnimationUsingKeyFrames
                Storyboard.TargetName="AnimatedTranslateTransform"
                Storyboard.TargetProperty="X"
                Duration="0:0:1"
                RepeatBehavior="Forever">

                --><!-- Using a LinearDoubleKeyFrame, the rectangle moves 
                     steadily from its starting position to 500 over 
                     the first 3 seconds.  -->
                <!--<LinearDoubleKeyFrame Value="200" KeyTime="0:0:2" />-->

                <!--<SplineDoubleKeyFrame KeySpline="0.5,0.0 0.5,0.00" Value="300" KeyTime="0:0:2" />-->

                <!-- Using a DiscreteDoubleKeyFrame, the rectangle suddenly 
                     appears at 400 after the fourth second of the animation. -->
                <!--<DiscreteDoubleKeyFrame Value="200" KeyTime="0:0:2" />-->

                <!-- Using a SplineDoubleKeyFrame, the rectangle moves 
                     back to its starting point. The
                     animation starts out slowly at first and then speeds up. 
                     This KeyFrame ends after the 6th
                     second. --><!--

                <SplineDoubleKeyFrame KeySpline="0.5,0.1 0.1,0.5" Value="200" KeyTime="0:0:0.5" />

                <SplineDoubleKeyFrame KeySpline="0.5,0.1 0.1,0.5" Value="0" KeyTime="0:0:1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
      </Rectangle.Resources>
    </Rectangle>-->




    <!--<Viewbox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Image Source="pack://application:,,,/Resouces/LEFT_VIEW_COMPLETE_SIKI.png"></Image>

    </Viewbox>-->

  </Grid>




</Window>
