<Window x:Class="CustomRatioButton.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CustomRatioButton"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Background="LightGray">
  <Window.DataContext>
    <local:AppViewModel/>
  </Window.DataContext>
  
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>


    <!-- Basic List View with Templating-->
    <StackPanel Grid.Row="0" Grid.RowSpan="2">
      <TextBlock FontSize="20">Listview mit Templating</TextBlock>
      <TextBlock>Selected: </TextBlock>
      <TextBlock Text="{Binding SelectedItem.Name}"/>
      <Button Command="{Binding AddListItem}" Margin="4" >Add Item</Button>
      <Button Command="{Binding DeleteItem}" CommandParameter="{Binding ElementName=MyListView, Path=SelectedItem}" Margin="4" >Delete Selected</Button>
      <ListView 
        x:Name="MyListView"
        ItemsSource="{Binding MyItemsList}" 
        SelectedItem="{Binding SelectedItem}"
        Background="Transparent">
        
        <!-- As warppannel -->
        <!--<ListView.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel></WrapPanel>
          </ItemsPanelTemplate>
        </ListView.ItemsPanel>-->

        <ListView.ItemTemplate>
        <DataTemplate>
            <Border Margin="3" BorderBrush="Blue" CornerRadius="4" BorderThickness="1" >
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Name}" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <!-- Delete Button on list item ... Very fancy-->
                <Button Margin="4" Command="{Binding Path=DataContext.DeleteItem, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}">DEL</Button>
                
              </StackPanel>
              
              
          </Border>
        </DataTemplate>
      </ListView.ItemTemplate>
    </ListView>
    </StackPanel>
    
    
    
    <!--Combo box TEST -->
    <StackPanel Grid.Column="1" VerticalAlignment="Center">
      <ComboBox Width="140" VerticalAlignment="Center" Margin="5,2" 
                  x:Name="CusomComobBox" SelectedItem="{Binding SelectedModel, Mode=TwoWay}"
                    ItemsSource="{Binding MyOptions}"
                   IsSynchronizedWithCurrentItem="True">
        
          
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <TextBlock Text="{Binding Number}"/>
              <TextBlock Grid.Column="1" Text="{Binding Name}"/>
            </Grid>
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>


    </StackPanel>
    
    
    
    <!--RadioButton Test-->

    <StackPanel Grid.Column="2">
      <StackPanel.Resources>
        <Style x:Key="RadioButtonListItem" TargetType="{x:Type ListBoxItem}" >

          <Setter Property="Template">
            <Setter.Value>

              <ControlTemplate TargetType="ListBoxItem">

                <DockPanel LastChildFill="True" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Center" >

                  <RadioButton IsChecked="{TemplateBinding IsSelected}" Focusable="False" IsHitTestVisible="False" VerticalAlignment="Center" Margin="0,0,4,0" />

                  <ContentPresenter
                        Content             = "{TemplateBinding ContentControl.Content}"
                        ContentTemplate     = "{TemplateBinding ContentControl.ContentTemplate}"
                        ContentStringFormat = "{TemplateBinding ContentControl.ContentStringFormat}"
                        HorizontalAlignment = "{TemplateBinding Control.HorizontalContentAlignment}"
                        VerticalAlignment   = "{TemplateBinding Control.VerticalContentAlignment}"
                        SnapsToDevicePixels = "{TemplateBinding UIElement.SnapsToDevicePixels}" />

                </DockPanel>

              </ControlTemplate>

            </Setter.Value>

          </Setter>

        </Style>

        <Style x:Key="RadioButtonList" TargetType="ListBox">

          <Style.Resources>
            <Style TargetType="Label">
              <Setter Property="Padding" Value="0" />
            </Style>
          </Style.Resources>

          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="Background"      Value="Transparent" />

          <Setter Property="ItemContainerStyle" Value="{StaticResource RadioButtonListItem}" />

          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListBox}">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>

          <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </Style.Triggers>

        </Style>

        <Style x:Key="HorizontalRadioButtonList" BasedOn="{StaticResource RadioButtonList}" TargetType="ListBox">
          <Setter Property="ItemsPanel">
            <Setter.Value>
              <ItemsPanelTemplate>
                <VirtualizingStackPanel Background="Transparent" Orientation="Horizontal" />
              </ItemsPanelTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </StackPanel.Resources>

      <TextBlock FontSize="15">Radiobutton ListView</TextBlock>
      <StackPanel Orientation="Horizontal">
        <TextBlock>Selected:</TextBlock>
        <TextBlock Text="{Binding SelectedOptionRadioList}"/>
      </StackPanel>

      <ListView SelectedIndex="0" ItemsSource="{Binding MyOptions}" SelectedItem="{Binding SelectedOptionRadioList}" Style="{StaticResource RadioButtonList}"/>
    </StackPanel>


    
    
    
    
    <!--Custom list Selctor Test-->
    
    <StackPanel Grid.Column="2" Grid.Row="1">
      <StackPanel.Resources>
        <ResourceDictionary Source="CustomListView.xaml"/>
      </StackPanel.Resources>

      <TextBlock FontSize="15">Custom Selector List</TextBlock>
      <StackPanel Orientation="Horizontal">
        <TextBlock>Selected:</TextBlock>
        <TextBlock Text="{Binding Path=SelectedItem.Name, ElementName=SelectorList}"/>
      </StackPanel>

      <ListView x:Name="SelectorList"
                ItemsSource="{Binding MyOptions}" 
                >

      </ListView>

    </StackPanel>


    <StackPanel Grid.Column="1" Grid.Row="1">
      <Label Content="Items template" TextBlock.FontSize="20"/>
      
      
      <ListBox HorizontalAlignment="Stretch" Background="Transparent" Style="{StaticResource DemoListBoxStlye}" >
        
      </ListBox>

    </StackPanel>
  </Grid>
</Window>